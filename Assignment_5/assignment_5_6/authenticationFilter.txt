**C:\xampp\tomcat\webapps\MyApp\login.html**

<!-- login.html: Displays the login form and shows an error message if present -->
<html>
  <head>
    <title>Login Page</title>
    <script>
      // Display error message if 'error' parameter exists
      window.onload = function() {
        var params = new URLSearchParams(window.location.search);
        if (params.has('error')) {
          document.getElementById('errorMsg').innerHTML = params.get('error');
        }
      }
    </script>
  </head>
  <body>
    <h2>Login</h2>
    <div id="errorMsg" style="color:red;"></div>
    <form action="LoginServlet" method="post">
      Username: <input type="text" name="username" /><br/>
      Password: <input type="password" name="password" /><br/>
      <input type="submit" value="Login" />
    </form>
  </body>
</html>


---------------------------------------------------------------------------------------------


**C:\xampp\tomcat\webapps\MyApp\WEB-INF\web.xml**

<?xml version="1.0" encoding="UTF-8"?>
<!-- web.xml: Configures servlets and the authentication filter -->
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee 
                             http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">
  
  <!-- Authentication Filter Configuration -->
  <filter>
    <filter-name>AuthFilter</filter-name>
    <filter-class>com.example.AuthFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>AuthFilter</filter-name>
    <url-pattern>/protected/*</url-pattern>
  </filter-mapping>
  
  <!-- Login Servlet Configuration -->
  <servlet>
    <servlet-name>LoginServlet</servlet-name>
    <servlet-class>com.example.LoginServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>LoginServlet</servlet-name>
    <url-pattern>/LoginServlet</url-pattern>
  </servlet-mapping>
  
  <!-- Protected Servlet Configuration -->
  <servlet>
    <servlet-name>ProtectedServlet</servlet-name>
    <servlet-class>com.example.ProtectedServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>ProtectedServlet</servlet-name>
    <url-pattern>/protected/ProtectedServlet</url-pattern>
  </servlet-mapping>
  
</web-app>


---------------------------------------------------------------------------------------------


**C:\xampp\tomcat\webapps\MyApp\WEB-INF\classes\com\example\LoginServlet.java**

// LoginServlet.java: Validates user credentials and sets a session attribute if valid.
package com.example;

import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.http.*;

public class LoginServlet extends HttpServlet {
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        // Retrieve credentials from the form
        String username = request.getParameter("username");
        String password = request.getParameter("password");
        
        // Simple validation: correct credentials are "admin" / "password"
        if ("admin".equals(username) && "password".equals(password)) {
            // Set the user in session and redirect to protected area
            HttpSession session = request.getSession();
            session.setAttribute("user", username);
            response.sendRedirect("protected/ProtectedServlet");
        } else {
            // Redirect back to login page with an error message
            response.sendRedirect("login.html?error=Invalid+credentials");
        }
    }
}


---------------------------------------------------------------------------------------------


**C:\xampp\tomcat\webapps\MyApp\WEB-INF\classes\com\example\ProtectedServlet.java**

// ProtectedServlet.java: Displays a welcome message for logged-in users.
package com.example;

import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.http.*;

public class ProtectedServlet extends HttpServlet {
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        // Retrieve user attribute from session (set by LoginServlet)
        HttpSession session = request.getSession(false);
        String username = (session != null) ? (String) session.getAttribute("user") : null;
        
        response.setContentType("text/html");
        response.getWriter().println("<html><body>");
        if (username != null) {
            response.getWriter().println("<h1>Welcome, " + username + "!</h1>");
        } else {
            response.getWriter().println("<h1>Access Denied</h1>");
        }
        response.getWriter().println("</body></html>");
    }
}


---------------------------------------------------------------------------------------------


**C:\xampp\tomcat\webapps\MyApp\WEB-INF\classes\com\example\AuthFilter.java**

// AuthFilter.java: Restricts access to /protected/* unless the user is logged in.
package com.example;

import java.io.IOException;
import javax.servlet.*;
import javax.servlet.http.*;

public class AuthFilter implements Filter {
    @Override
    public void init(FilterConfig filterConfig) throws ServletException {
        // Initialization logic if required
    }
    
    @Override
    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)
            throws IOException, ServletException {
        HttpServletRequest req  = (HttpServletRequest) request;
        HttpServletResponse res = (HttpServletResponse) response;
        
        // Check if the session exists and the user is logged in
        HttpSession session = req.getSession(false);
        if (session == null || session.getAttribute("user") == null) {
            // Not logged in; redirect to login page with error message
            res.sendRedirect(req.getContextPath() + "/login.html?error=Please+login+first");
        } else {
            // User is logged in; proceed with the request
            chain.doFilter(request, response);
        }
    }
    
    @Override
    public void destroy() {
        // Cleanup resources if necessary
    }
}

